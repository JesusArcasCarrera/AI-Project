# -*- coding: utf-8 -*-
"""FaceMask Clasificator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fcxl93-oJP1PubPEyK1UGN3SPOxW41gD
"""

#!unzip -q /content/dataset.zip -d /content/dataset/

import keras
import numpy as np
import matplotlib.pyplot as plt

from keras.models import Sequential
from keras.layers import Dense, Conv2D, Dropout, Flatten, MaxPooling2D
from keras.optimizers import Adam, RMSprop, SGD
from keras.utils import to_categorical
from dataset_load import load_data, get_label

(X_train, Y_train), (X_test, Y_test)= load_data(test_size = 0.2, path='/content/dataset/')

plt.imshow(X_train[5])

Y_train[6]

drop_prob = 0.6

ks=(7,7)# kernel size
modelo = Sequential()
modelo.add(Conv2D(input_shape=[64,64,3],filters=32,kernel_size=ks,padding='same',activation='relu'))
modelo.add(MaxPooling2D())
modelo.add(Conv2D(input_shape=[32,32,3],filters=64,kernel_size=ks, padding='same',activation='relu'))
modelo.add(MaxPooling2D())
modelo.add(Flatten())
modelo.add(Dropout(rate=drop_prob))
modelo.add(Dense(units=1024, activation='relu'))
modelo.add(Dropout(rate=drop_prob))
modelo.add(Dense(units=3, activation='softmax'))
modelo.summary()

epocas = 50
bs = 200
lr = 0.001
optim = Adam(lr)
modelo.compile(loss = 'categorical_crossentropy',optimizer=optim,metrics=['accuracy'])

historico = modelo.fit(X_train, Y_train, epochs=epocas,batch_size=bs, validation_split=0.2)

plt.plot(historico.history['loss'],c='b')
plt.plot(historico.history['val_loss'],c='r')
plt.show()

plt.plot(historico.history['accuracy'],c='b')
plt.plot(historico.history['val_accuracy'],c='r')
plt.show()

metricas = modelo.evaluate(X_test,Y_test,verbose=0)
print("Accuracy {:5.3}".format(metricas[1]))

#modelo.save('./945.h5')

import random
ind = random.randint(0,X_test.shape[0]-1)
plt.imshow(X_test[ind])
get_label(modelo.predict(X_test[ind].reshape(1,64,64,3)))

ind